{
  "compiler": {
    "version": "0.6.12+commit.27d51765"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "userAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address payable",
            "name": "relayerAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "functionSignature",
            "type": "bytes"
          }
        ],
        "name": "MetaTransactionExecuted",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "userAddress",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "functionSignature",
            "type": "bytes"
          },
          {
            "internalType": "bytes32",
            "name": "sigR",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "sigS",
            "type": "bytes32"
          },
          {
            "internalType": "uint8",
            "name": "sigV",
            "type": "uint8"
          }
        ],
        "name": "executeMetaTransaction",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "get",
        "outputs": [
          {
            "internalType": "int256",
            "name": "",
            "type": "int256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int256",
            "name": "first",
            "type": "int256"
          },
          {
            "internalType": "int256",
            "name": "second",
            "type": "int256"
          },
          {
            "internalType": "enum Calc.BinaryOperator",
            "name": "op",
            "type": "uint8"
          }
        ],
        "name": "getBinaryOperation",
        "outputs": [
          {
            "internalType": "int256",
            "name": "",
            "type": "int256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "name": "getNonce",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int256",
            "name": "first",
            "type": "int256"
          },
          {
            "internalType": "enum Calc.UnaryOperator",
            "name": "op",
            "type": "uint8"
          }
        ],
        "name": "getUnaryOperation",
        "outputs": [
          {
            "internalType": "int256",
            "name": "",
            "type": "int256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int256",
            "name": "x",
            "type": "int256"
          }
        ],
        "name": "sqrt",
        "outputs": [
          {
            "internalType": "int256",
            "name": "y",
            "type": "int256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "int256",
            "name": "x",
            "type": "int256"
          }
        ],
        "name": "store",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/calc.sol": "Calc"
    },
    "evmVersion": "istanbul",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": []
  },
  "sources": {
    "contracts/calc.sol": {
      "keccak256": "0xd54eab02f33905b3c88a083977188b4cd0ca4806f95b000d19bff4fd0d268e0b",
      "license": "GPL-3.0",
      "urls": [
        "bzz-raw://244c529b95de5f741a4196cfb5a545ab8fc7c55cab34a968ebaaaeef530f2546",
        "dweb:/ipfs/QmdMaWGP8RvJHVwBiBBiuw832hH5zPtGdTrvsgM2AA1L1c"
      ]
    },
    "contracts/eip712.sol": {
      "keccak256": "0xeeef54bf931d2efb003b59f4e01feb3db3e3bf8603aa40e2648ac293ba26fef1",
      "license": "MIT",
      "urls": [
        "bzz-raw://37bb6ff0b6df80e2f070e1076f11910192e7cfe037bf84b1433e3eabb4425ec8",
        "dweb:/ipfs/QmQwSv2ehDmCaPUiw3rA5zh9r3hP5DSDQfs6igWiaJnYtY"
      ]
    },
    "contracts/eipbase.sol": {
      "keccak256": "0x4773dfa7c818728f30d3fef51deba733e6dee475c95b5d9ac2e46624278914a4",
      "license": "MIT",
      "urls": [
        "bzz-raw://0f0f5230f87801db0182e5fbd59c925dfdb538fbe98d7484e88cca916b2a8561",
        "dweb:/ipfs/QmUJzfktZ2adJ6DRSp3JDbzrN16f4QXqB5KcXeCsErmjr8"
      ]
    }
  },
  "version": 1
}
